package project0104;

import java.util.*;

public class A {
	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) { // 계산기

		C c = new C();

		while (true) {
			System.out.println("[1]계산 [2]조회");
			int menu = sc.nextInt();
			switch(menu) {
			case 1:
				cal(c);
				break;
			case 2:
				show(c);
				break;
				default:
					break;
			}

		}
	}
	public static void show(C c) {
		for(int i = 0; i<c.current; i++) {
			System.out.println("첫번째 숫자: "+(int)c.bs[i].num_1+" 두번째 숫자: "+(int)c.bs[i].num_2);
			System.out.println("연산자: "+c.bs[i].operator);
			if(c.bs[i].operator.equals("/")) {
				System.out.println("결과갑: "+c.bs[i].d_result);
			}
			System.out.println("결과값: "+c.bs[i].result);
			System.out.println("---------------------");
		}

	}

	public static void cal(C c) {
		System.out.print("값 두개 입력: ");
		int num1 = sc.nextInt(), num2 = sc.nextInt();
		B b = new B();
		b.num_1 = num1;
		b.num_2 = num2;

		System.out.print("연산자 입력: ");
		String operator = sc.next();
		b.operator = operator;
		switch (operator) {
		case "+":
			b.result = (int)(b.num_1 + b.num_2);
			System.out.println(b.result);
			break;
		case "-":
			b.result = (int)(b.num_1 - b.num_2);
			System.out.println(b.result);
			break;
		case "*":
			b.result = (int)(b.num_1 * b.num_2);
			System.out.println(b.result);
			break;
		case "/":
			b.d_result = b.num_1 / b.num_2;
			System.out.println(b.d_result);
			break;
		default:
			break;
		}
		c.bs[c.current] = b;
		c.current++;

		if (c.current == c.bs.length) {
			B[] temp = new B[c.bs.length + 1];
			for (int i = 0; i < c.bs.length; i++) {
				temp[i] = c.bs[i];
			}
			c.bs = temp; // 길이 5를 늘린 temp라는 객체배열을 다시 넣어준다. >>bs를 그냥 쓰면 된다.

		}

	}

//	public static void input(C c) {
//		System.out.print("첫번째 값입력: ");
//		int num1 = sc.nextInt();
//		System.out.print("두번째 값입력: ");
//		int num2 = sc.nextInt();
//		System.out.print("세번째 값입력: ");
//		int num3 = sc.nextInt();
//
//		B b = new B(); // 객체생성
//		b.num_1 = num1;
//		b.num_2 = num2;
//		b.num_3 = num3;
//
//		c.bs[c.current] = b;
//		c.current++;
//
//		if (c.current == c.bs.length) {
//			B[] temp = new B[c.bs.length + 1];
//			for (int i = 0; i < c.bs.length; i++) {
//				temp[i] = c.bs[i];
//			}
//			c.bs = temp; // 길이 5를 늘린 temp라는 객체배열을 다시 넣어준다. >>bs를 그냥 쓰면 된다.
//
//		}
//
//	}
//
//	public static void output(C c) {
//		for (int i = 0; i < c.current; i++) {
//			System.out.println(c.bs[i].num_1);
//			System.out.println(c.bs[i].num_2);
//			System.out.println(c.bs[i].num_3);
//			System.out.println("-----------");
//		}
//	}
}
